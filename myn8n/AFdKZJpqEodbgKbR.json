{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fields": {
      "main": [
        [
          {
            "node": "Get Active Campaigns",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Campaigns Ads": {
      "main": [
        [
          {
            "node": "Split Out Ads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Creative ID": {
      "main": [
        [
          {
            "node": "Get Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Content": {
      "main": [
        [
          {
            "node": "Set Actions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Collect Relevant Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Collect Relevant Data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Add Campaign name": {
      "main": [
        [
          {
            "node": "Get Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Actions": {
      "main": [
        [
          {
            "node": "Get Actions Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Actions": {
      "main": [
        [
          {
            "node": "Split Out2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out2": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "Set Purchase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Purchase": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Get Image Description",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image Description": {
      "main": [
        [
          {
            "node": "Set Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Input": {
      "main": [
        [
          {
            "node": "Aggregate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Input": {
      "main": [
        [
          {
            "node": "Create Temp File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Perplexity API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Perplexity API": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Head",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calculator1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Perplexity Tool1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Performance Analyzer2": {
      "ai_tool": [
        [
          {
            "node": "Head",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Deep Research": {
      "ai_tool": [
        [
          {
            "node": "Head",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "New Ad Creator Agent": {
      "ai_tool": [
        [
          {
            "node": "Head",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Actions Values": {
      "main": [
        [
          {
            "node": "Get Cost Per action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Cost Per action": {
      "main": [
        [
          {
            "node": "Get ROAS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Temp file": {
      "main": [
        [
          {
            "node": "Set Date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Data": {
      "ai_tool": [
        [
          {
            "node": "Head",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "AI Agent2",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Head": {
      "main": [
        [
          {
            "node": "Delete Temp File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Active Campaigns": {
      "main": [
        [
          {
            "node": "Split Out Campaigns",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Output Slack": {
      "main": [
        [],
        [
          {
            "node": "Count Executions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Date": {
      "main": [
        [
          {
            "node": "Head",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weekly Trigger": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Trigger": {
      "main": [
        [
          {
            "node": "Set Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_tool": [
        [
          {
            "node": "Head",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Get Insights": {
      "main": [
        [
          {
            "node": "Filter Empty Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Campaigns": {
      "main": [
        [
          {
            "node": "Get Campaigns Ads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Ads": {
      "main": [
        [
          {
            "node": "Add Campaign name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Empty Items": {
      "main": [
        [
          {
            "node": "Get Actions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get ROAS": {
      "main": [
        [
          {
            "node": "Get Creative ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Temp File": {
      "main": [
        [
          {
            "node": "Update Temp file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Temp File": {
      "main": [
        [
          {
            "node": "Send Output Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count Executions": {
      "main": [
        [
          {
            "node": "Head",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Error Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-22T23:16:16.232Z",
  "id": "AFdKZJpqEodbgKbR",
  "isArchived": false,
  "meta": null,
  "name": "Automated Facebook Ads Analyzer & Creative Generator with AI Agents",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1780,
        -2740
      ],
      "id": "456a8f6a-abcb-4e2d-9787-c6bf4165070c",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d768cc21-03d3-4362-8063-d613a7e030d7",
              "name": "Ad Account ID",
              "value": "YOUR AD ACCOUNT ID HERE",
              "type": "string"
            },
            {
              "id": "83830154-57f1-4913-b65e-674b2927a242",
              "name": "date_preset",
              "value": "={{ $prevNode.name.toLowerCase().includes('weekly') ? 'last_7d' : 'yesterday' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        -2460
      ],
      "id": "dca705a0-9d6d-4ff4-8c4d-473af8e3c924",
      "name": "Set Fields"
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $('Split Out Campaigns').item.json.data.id }}",
        "edge": "=ads",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "date_preset",
                "value": "={{ $('Set Fields').item.json.date_preset }}"
              },
              {
                "name": "fields",
                "value": "name,insights"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        3260,
        -2460
      ],
      "id": "3b87abdd-ff8c-4aba-8cd0-85d0c8007b53",
      "name": "Get Campaigns Ads",
      "executeOnce": false
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $json.creative.id }}",
        "options": {
          "queryParametersJson": "{\n  \"thumbnail_width\": \"1080\",\n  \"thumbnail_height\": \"1080\",\n  \"fields\": \"asset_feed_spec,thumbnail_url\"\n}"
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        5600,
        -2460
      ],
      "id": "705f506a-99ab-4023-9357-b7239a1de62e",
      "name": "Get Content",
      "executeOnce": false
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $('Filter Empty Items').item.json.data[0].ad_id }}",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "fields",
                "value": "id,name,creative"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        5380,
        -2460
      ],
      "id": "e05587d4-b440-4563-be59-d9dc6340ced3",
      "name": "Get Creative ID",
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "61d99eaa-fff9-4fd5-a8b5-92069b43b8af",
              "name": "Campaign Name",
              "value": "={{ $('Add Campaign name').item.json.Campaign }}",
              "type": "string"
            },
            {
              "id": "47241850-5644-4ae2-964d-90bc89583bd4",
              "name": "Campaign_ID",
              "value": "={{ $('Get Insights').item.json.data[0].campaign_id }}",
              "type": "string"
            },
            {
              "id": "62f93ee2-61cb-4805-9353-b249a45972c9",
              "name": "Campaign Objective",
              "value": "={{ $('Split Out Campaigns').item.json.data.objective }}",
              "type": "string"
            },
            {
              "id": "da761774-2d5b-4dd8-87fa-df0725e987c0",
              "name": "Ad_Name",
              "value": "={{ $('Add Campaign name').item.json.name }}",
              "type": "string"
            },
            {
              "id": "6f41cc50-46d3-4646-b9a2-914667633594",
              "name": "Ad_ID",
              "value": "={{ $('Get Insights').item.json.data[0].ad_id }}",
              "type": "string"
            },
            {
              "id": "c91c5eee-109b-4766-ad94-514af0a31346",
              "name": "Media",
              "value": "={{ $('Get Content').item.json.thumbnail_url }}",
              "type": "string"
            },
            {
              "id": "d533fcf5-64ac-435b-9fcc-4c77449d4470",
              "name": "Content",
              "value": "={{ \n  JSON.stringify([\n    {\n      \"Images\": $('Get Content').item.json.asset_feed_spec.images,\n      \"Bodies\": $('Get Content').item.json.asset_feed_spec.bodies,\n      \"Call To Action\": $('Get Content').item.json.asset_feed_spec.call_to_action_types,\n      \"Descriptions\": $('Get Content').item.json.asset_feed_spec.descriptions,\n      \"Link URLs\": $('Get Content').item.json.asset_feed_spec.link_urls,\n      \"Titles\": $('Get Content').item.json.asset_feed_spec.titles\n    }\n  ], (key, value) => key === 'adlabels' ? undefined : value, 2) \n}}\n",
              "type": "array"
            },
            {
              "id": "f5267138-d734-46bf-99f4-3e1c925d0665",
              "name": "Insights",
              "value": "={{ JSON.stringify($('Get Insights').item.json.data, null, 2) }}",
              "type": "array"
            },
            {
              "id": "186f1a10-ed4d-4774-9762-021e2becce1c",
              "name": "Roas (Omni_Purchase)",
              "value": "={{ $('Get ROAS').item.json.data[0].purchase_roas[0].value }}",
              "type": "string"
            },
            {
              "id": "708d70b6-49a5-4d0c-bb82-87596d690aa5",
              "name": "Cost Per Action (CPA)",
              "value": "={{ JSON.stringify($('Get Cost Per action').item.json.data) }}",
              "type": "string"
            },
            {
              "id": "b1791b65-a4b4-40cf-b499-b56e15c3f641",
              "name": "Total sales",
              "value": "={{ JSON.stringify($('Get Actions Values').item.json.data.map(item => ({ ...item, action_values: item.action_values.filter(av => av.action_type === \"offsite_conversion.fb_pixel_purchase\") }))) }}\n",
              "type": "string"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": true
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6500,
        -2320
      ],
      "id": "454b9303-88e0-4f15-817c-91dc7f3b2cf4",
      "name": "Collect Relevant Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7a450175-9b8a-404a-842a-0f2796406455",
              "name": "Campaign",
              "value": "={{ $('Split Out Campaigns').item.json.data.name }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3700,
        -2460
      ],
      "id": "310e4fad-4e0f-462f-bf18-acf7b092352a",
      "name": "Add Campaign name"
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $json.data[0].ad_id }}",
        "edge": "insights",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "date_preset",
                "value": "={{ $('Set Fields').item.json.date_preset }}"
              },
              {
                "name": "fields",
                "value": "actions"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        4500,
        -2460
      ],
      "id": "a2ca5d60-ad83-4ce3-b6e5-0f6a2672ca9d",
      "name": "Get Actions",
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "419293d0-7211-40ff-bf0d-488b145b2dd7",
              "name": "Actions",
              "value": "={{ $('Get Actions').item.json.data[0].actions }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6180,
        -2640
      ],
      "id": "bed36b89-24c4-4d57-b2ea-5ea34d480fa2",
      "name": "Set Actions"
    },
    {
      "parameters": {
        "fieldToSplitOut": "Actions",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        6380,
        -2640
      ],
      "id": "3fa3f402-db49-4270-a29f-14b50d36d2a5",
      "name": "Split Out2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "52b226ef-b1ca-4628-8bcc-de0f5adebde5",
              "leftValue": "={{ $json.action_type }}",
              "rightValue": "omni_purchase",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        6600,
        -2640
      ],
      "id": "c0df6b51-83c5-4e68-b7ef-0a2aafece5b5",
      "name": "Filter2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "98e33dd5-88f2-4cae-b131-f1b92a6f1e2f",
              "name": "Purchase",
              "value": "={{ $json.value }}",
              "type": "string"
            },
            {
              "id": "131c25da-af26-4605-afb2-0ed3608901fd",
              "name": "Ad ID Purchase",
              "value": "={{ $('Get Insights').item.json.data[0].ad_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6820,
        -2640
      ],
      "id": "04167422-5f1e-4453-92ac-dda17d2cd010",
      "name": "Set Purchase"
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "Ad ID Purchase",
              "field2": "Ad_ID"
            }
          ]
        },
        "joinMode": "enrichInput2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        7160,
        -2480
      ],
      "id": "d82a86c8-b02a-4eec-8c23-36680d239257",
      "name": "Merge"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "imageUrls": "={{ $json.Media }}",
        "options": {
          "detail": "low"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        7400,
        -2480
      ],
      "id": "a8fd1adf-75a7-44ae-b4d0-d84553e716bf",
      "name": "Get Image Description",
      "executeOnce": false,
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "175be6cc-d67f-4865-92ab-ad03b2972a90",
              "name": "Whole Input",
              "value": "=- Campaign Name: {{ $('Merge').item.json['Campaign Name'] }}\n\n- Campaign ID: {{ $('Merge').item.json.Campaign_ID }}\n\n- Campaign Ojective: {{ $('Merge').item.json['Campaign Objective'] }}\n\n- Ad Name: {{ $('Merge').item.json.Ad_Name }}\n\n- Ad ID: {{ $('Merge').item.json.Ad_ID }}\n\n- Ad Media Description: {{ $('Get Image Description').item.json.content }}\n\n- Ad Content:\n{{ JSON.stringify($('Merge').item.json.Content, (key, value) => key === 'Images' ? undefined : value, 2) }}\n\n- Metrics:\nSpend: {{ $('Merge').item.json.Insights[0].spend }}\nCPM:{{ $('Merge').item.json.Insights[0].cpm }}\nCPC:{{ $('Merge').item.json.Insights[0].cpc }}\nCTR:{{ $('Merge').item.json.Insights[0].ctr }}\nRoas (Omni Purchase): {{ $('Merge').item.json['Roas (Omni_Purchase)'] }}\nPurchase: {{ $('Merge').item.json.Purchase }}\n\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7640,
        -2480
      ],
      "id": "e9860848-bbc0-4a00-a03e-eaadaeb7129b",
      "name": "Set Input"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "Whole Input",
              "renameField": true,
              "outputFieldName": "Aggregated Input"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        7820,
        -2480
      ],
      "id": "a1dcdf78-47ef-4687-a8fc-295a20994af2",
      "name": "Aggregate Input"
    },
    {
      "parameters": {
        "content": "## Perplexity",
        "height": 260,
        "width": 840,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        10040,
        -1480
      ],
      "id": "5e2998ca-5b5a-43ad-bedd-2eda6d32a260",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        10160,
        -1420
      ],
      "id": "7779f5a8-e763-4396-a301-cc2b70fae811",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"sonar-deep-research\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"Be precise and concise.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"{{ $json.query }}\"\n    }\n  ]\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        10420,
        -1420
      ],
      "id": "1eab2364-6ea8-4e16-a2e5-7d55fb10fee7",
      "name": "Perplexity API"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "587e537d-ff0e-45ce-93fc-abd9954ff241",
              "name": "Response",
              "value": "=Content\n{{ $json.choices[0].message.content}}\n\nCitations:\n{{ $json.citations }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        10660,
        -1420
      ],
      "id": "a3d10601-52cd-431e-b20a-6a83c15a3fc9",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "content": "### Trigger every Monday 10 am",
        "height": 260,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1700,
        -2560
      ],
      "id": "07455658-6d61-49fe-9be6-c848e8b81cf5",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "### Set:\n- Ad Account\n- Date Preset",
        "height": 260,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2180,
        -2560
      ],
      "id": "2b601e13-7efe-43a0-bb0f-451145786be0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "### Get Campaigns",
        "height": 260,
        "width": 480,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2620,
        -2560
      ],
      "id": "041050c5-8166-471e-a0b7-8f0470bd894c",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "### Get Ads",
        "height": 260,
        "width": 700,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3180,
        -2560
      ],
      "id": "911060c9-20db-43c3-94fe-e45975d85d70",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "### Get Ads Metrics",
        "height": 260,
        "width": 1780,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3980,
        -2560
      ],
      "id": "ca6a3ae1-3045-4d9c-bd9c-16a90ee0b4e1",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "### Get Purchase Count",
        "height": 240,
        "width": 920,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6100,
        -2700
      ],
      "id": "218a28e9-f469-4dc7-ae66-19a06ab44a29",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "",
        "height": 260,
        "width": 260,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7320,
        -2540
      ],
      "id": "49e2966c-8121-4e17-ac3b-b62ca9a703c2",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Performance Analyzer",
        "height": 480,
        "width": 1000,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8880,
        -1840
      ],
      "id": "ed09b214-ba2b-4689-99cf-f4f0d1cde091",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Send Output",
        "height": 320,
        "width": 340,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        12560,
        -2660
      ],
      "id": "cc9d5dfb-2b0d-4ab3-b5f4-d4d8c10fe367",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "",
        "height": 960,
        "width": 7160,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1980,
        -2660
      ],
      "id": "f00e48d3-d6da-4f96-bab1-0b42d7a66d74",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "content": "## Deep Research",
        "height": 840,
        "width": 1000,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9940,
        -2000
      ],
      "id": "7b07ed96-a273-438f-9035-46d085616565",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## New Add Creation",
        "height": 480,
        "width": 1000,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        11000,
        -1820
      ],
      "id": "c1d28855-7c0b-49be-a41f-03f05b1b5fdc",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        10000,
        -2340
      ],
      "id": "bcad0ad1-ffba-43ea-9257-e47b4ae7596d",
      "name": "OpenAI Chat Model2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are the Group Leader Agent. Your role is to consolidate and integrate outputs from your team of specialized agents into one final comprehensive Markdown report in the Slack Block Kit format. Use the following HTTP Request tools as part of your process:\n\n- **Get_Data:** Use this tool to retrieve the aggregated input data from Google Docs. IMPORTANT: Use this documment id as input: {{ $('Update Temp file').item.json.documentId }}\n- **Performance_Analyzer:** Use this tool to retrieve a consolidated summary of the campaign’s performance data, including key metrics such as ROAS, CTR, CPA, Purchases, Spend, , etc.\n- **Deep_Research:** Use this tool to obtain in-depth behavioral insights via the Perplexity_Tool. The output should include detailed trigger events, core desires, and psychological framing, with proper source citations.\n- **New_Ad_Creator_Agent:** Use this tool to obtain creative ad suggestions, including three complete new ad copy drafts, additional hook/headline variations for video ads or UGC, and a creative direction note with recommendations on tone, mood, format, visuals, and a hook line.\n- **Pinecone_Vector_ Store:** Use this tool to get ...\n\nImportant: After receiving the top ads from the Performance Analyzer, you must verify that the top three ads are indeed the highest performing based on the input data from the Google Docs document (using the provided document ID {Leader_DocumentID}). If the top three ads reported by the Performance Analyzer do not match the top three according to the input data (for example, if any ad is out of order or misidentified), immediately correct and reorder them using the data from the document, also if there's missing data add it accordingly. Do not hallucinate or fabricate any values—use only the exact numbers provided in the Google Docs document. Confirm and proceed only when the top three ads are accurately identified and ordered by ROAS (in descending order) as per the input data.\n\nImportant 2: When sending instructions to your specialized agents, always include the document ID (referenced as {Leader_DocumentID}). This ensures all agents use the same data source.\n\n\nAdditionally, ensure that:\n- **Sorting:** Sort the ads by ROAS in descending order so that the ad with the highest ROAS appears first in the \"Top Performing Ads\" section.\n- **Numerical Formatting:** All numeric KPIs (ROAS, CTR, CPA, Spend) should be formatted consistently to two decimal places.\n- **Calculation Validation:** Use the Calculator tool for any derived metrics (such as Purchase ROAS, Total Sales, CPA) and tag them as *calculated*.\n- **Data Integrity:** Before finalizing the output, ensure that every Ad ID exactly matches the corresponding Ad ID in the input data. Double-check for any discrepancies, misassignments, or swaps, and correct them immediately.\n- Use the current date on the repot: {{ new Date().toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) }}\nYour final output must strictly adhere to the following Slack Block Kit JSON structure (do not include any opening or closing messages outside the block structure):\n\n-----------------------------------------------------------\n{\n  \"blocks\": [\n    {\n      \"type\": \"header\",\n      \"text\": {\n        \"type\": \"plain_text\",\n        \"text\": \"Creative Insights Drop – {{ new Date().toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) }}\n\",\n        \"emoji\": true\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*Top Performing Ads → Behavioral Insights → New Ad Concepts*\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*🔥 Top Performing Ads*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"1️⃣ *Ad ID:* [Ad ID from Performance_Analyzer]\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> \n◦ *Format:* [Ad Format from Performance_Analyzer]\\n\n◦ *Headline:* [Ad Headline from Performance_Analyzer]\\n\n◦ *Body Copy:* [Ad Body Copy from Performance_Analyzer]\\n\n*ROAS:* [ROAS] | *CTR:* [CTR]% | *CPA:* $[CPA] | *Purchases:* [Purchases] | *Spend:* $[Spend]\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"2️⃣ *Ad ID:* [Second Ad ID from Performance_Analyzer]\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> \n◦ *Format:* [Ad Format from Performance_Analyzer]\\n\n◦ *Headline:* [Ad Headline from Performance_Analyzer]\\n\n◦ *Body Copy:* [Ad Body Copy from Performance_Analyzer]\\n\n*ROAS:* [ROAS] | *CTR:* [CTR]% | *CPA:* $[CPA] | *Purchases:* [Purchases] | *Spend:* $[Spend]\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"3️⃣ *Ad ID:* [Third Ad ID from Performance_Analyzer]\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> \n◦ *Format:* [Ad Format from Performance_Analyzer]\\n\n◦ *Headline:* [Ad Headline from Performance_Analyzer]\\n\n◦ *Body Copy:* [Ad Body Copy from Performance_Analyzer]\\n\n*ROAS:* [ROAS] | *CTR:* [CTR]% | *CPA:* $[CPA] | *Purchases:* [Purchases] | *Spend:* $[Spend]\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*🧠 What’s Working Across These Ads:*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> • *Message:* [Summary or key message from Performance_Analyzer]\\n• *Voice:* [Voice insights, e.g., _Calm, grounded, real-world tone_]\\n• *Social Proof:* [Insights on social proof, e.g., _studies, purchase volume shown subtly_]\\n• *Hooks:* [Insights on hooks, e.g., _scroll-stoppers rooted in skepticism + rediscovery_]\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*🧠 Behavioral Insights (GPT + Perplexity Research)*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*Trigger Events:*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> • [Detailed trigger event 1]\\n• [Detailed trigger event 2]\\n• [Detailed trigger event 3]\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*Core Desires:*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> • [Detailed core desire 1]\\n• [Detailed core desire 2]\\n• [Detailed core desire 3]\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*Psychological Framing That Converts:*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> • [Insight 1 regarding framing, e.g., quiet social proof]\\n• [Insight 2 regarding framing, e.g., emotional time delay]\\n• [Insight 3 regarding framing, e.g., personal ownership language]\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*✍️ 3 New Ad Copy + Headline Combos to Test*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"✅ *Variation 1*\\n*Headline:* Variation 1 Headline from New_Ad_Creator_Agent\\n*Body Copy:* Variation 1 Body Copy from New_Ad_Creator_Agent\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"✅ *Variation 2*\\n*Headline:* Variation 2 Headline from New_Ad_Creator_Agent\\n*Body Copy:* Variation 2 Body Copy from New_Ad_Creator_Agent\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"✅ *Variation 3*\\n*Headline:* Variation 3 Headline from New_Ad_Creator_Agent\\n*Body Copy:* Variation 3 Body Copy from New_Ad_Creator_Agent\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*🎯 Today’s Creative Tasks*\"\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \">>> - Write UGC scripts for Variations [X] & [Y]\\n- Build 1 new static creative using Variation [X] (headline overlay + image concept)\\n- Recut top-performing demo video with expert VO and Variation [X] messaging\\n- Drafts due in #creative-review by [Deadline]\"\n      }\n    }\n  ]\n}\n-----------------------------------------------------------\n\nEnsure that:\n- If any required data is missing, mark it as undefined or 0 as appropriate.\n- The final output contains no extraneous content and strictly adheres to the above structure.\n- Each HTTP Request tool call corresponds to a specialized agent within your team.\n- Always include the document ID provided by the Group Leader (referenced as {Leader_DocumentID}) in your queries to the Get_Data tool.\n- Double-check that every Ad ID exactly matches the corresponding Ad ID from the input data, and order the ads by ROAS in descending order.\n  \nGenerate the final Markdown report accordingly.\n",
        "options": {
          "systemMessage": "You are a helpful assistant"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        10340,
        -2560
      ],
      "id": "ba311e37-44bf-4788-a11e-4395f07738f9",
      "name": "Head",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "196e1ab5-8be9-45b3-9a04-d599eae8d4d3",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        9020,
        -1720
      ],
      "id": "d45c3216-6061-41c7-a216-e7d4817b9f68",
      "name": "Webhook",
      "webhookId": "196e1ab5-8be9-45b3-9a04-d599eae8d4d3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        9580,
        -1720
      ],
      "id": "c9052c77-286e-4233-b684-d6f43a4d517f",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Leader Agent Message:\n{{ JSON.stringify($json.body) }}",
        "options": {
          "systemMessage": "=You are the Performance Analyzer Agent. Your task is to extract, consolidate, and analyze all campaign performance data retrieved via the **Get_Data** tool. **Note:**The Group Leader Agent will send you the document ID in an initial message, which you must use to retrieve the aggregated input data from Google Docs. Use the provided document ID (referenced as {Leader_DocumentID}) with the Get_Data tool.\n\nThe input data includes:\n\n- **Campaign Information:** Campaign Name, Campaign ID, Campaign Objective.\n- **Ad Information:** Ad Name, Ad ID, and the full ad copy (including the headline from Titles, body copy from Bodies, call to action, description, and any link URLs available).\n- **Performance Metrics:** Spend, CPM, CPC, CTR, ROAS, CPA, Total Sales, and the number of Purchases.\n- **Additional Context:** Any ad media description provided.\n\nYou must:\n- **Calculate Purchase ROAS using the Calculator tool** if it is not explicitly provided (e.g., compute Purchase ROAS as Purchase Revenue / Spend, and tag it as *calculated*).\n- **Calculate Total Sales** as the product of Spend and ROAS (when ROAS is available), and tag it as *calculated*.\n- **Calculate CPA (Cost Per Acquisition)** as Spend divided by the number of Purchases (if Purchases > 0), and tag it as *calculated*.\n- Use the Calculator tool to perform any additional necessary computations if certain metrics are missing but can be derived from existing data.\n\nYour output should be a concise, structured summary that highlights:\n- The top-performing ads based on key KPIs (ROAS, CPA, Total Sales, and Purchases).\n- A detailed breakdown of metrics for each ad.\n- Any trends, anomalies, or notable observations in ad performance.\n\nIf any required metric is missing, mark it as “undefined” or 0 as appropriate. Do not add any additional data beyond what is provided. Format your output in a clear, structured manner so that the Group Leader Agent can later integrate it into the final Markdown report.  \n "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        9240,
        -1720
      ],
      "id": "1fffb444-18c9-4dc4-94cc-4601d353a0d4",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        9200,
        -1520
      ],
      "id": "2f2b9b48-a1d9-4881-a1b7-647c96813d29",
      "name": "OpenAI Chat Model3"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        9440,
        -1520
      ],
      "id": "9313074e-d1ea-4136-a17a-f04bde1b9eb8",
      "name": "Calculator1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "7f8083f7-27c9-48b9-9ee9-2e896eff0f5d",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        10120,
        -1880
      ],
      "id": "20145d27-25c0-4303-8907-58cc454663a7",
      "name": "Webhook1",
      "webhookId": "7f8083f7-27c9-48b9-9ee9-2e896eff0f5d"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        10680,
        -1880
      ],
      "id": "84c71807-88f4-49ea-850e-a8921768aeaf",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Leader Agent Message:\n{{ JSON.stringify($json.body) }}",
        "options": {
          "systemMessage": "=You are the Deep Research Agent. Your task is to conduct comprehensive avatar and audience research for the brand [INSERT BRAND NAME] to uncover deep insights that will inform ad copywriting. This research should focus on understanding the audience's motivations, fears, desires, language patterns, pain points, objections, beliefs, and common themes across a variety of sources. The goal is to combine these findings with patterns from the brand’s existing high-performing ad copy.\n\nUse the following research sources:\n- Customer reviews (from the brand’s own site, Amazon, and competitors)\n- Reddit threads, forums, Quora, YouTube comments\n- The brand's existing high-performing ad copy and comments\n- Influencer testimonials or UGC content, if available\n- Testimonials from competing or similar brands\n\nYour output must include the following sections:\n\n1. **Audience Avatars**\n   - Identify 2–4 main customer personas (give them names).\n   - For each persona, include:\n     - Demographics, psychographics, and buying motivations.\n     - Key objections and emotional triggers.\n     - Preferred content style and language.\n\n2. **Emotional Landscape**\n   - Identify the core desires and emotions the product speaks to.\n   - Note the underlying fears or frustrations.\n   - Describe the transformation the customer seeks.\n\n3. **Jobs-to-be-Done Analysis**\n   - Define the “job” the customer is hiring the product to do.\n   - Outline the functional, emotional, and social dimensions of that job.\n\n4. **Voice of Customer (VOC) Analysis**\n   - List the most common phrases used by customers (direct quotes if available).\n   - Identify repeated words or themes in top reviews and ad comments.\n   - Highlight phrases that signal desire, pain, satisfaction, or unmet expectations.\n\n5. **Objections & Barriers to Purchase**\n   - Describe any hesitations or concerns that prospects have.\n   - Identify any misconceptions that need to be addressed.\n\n6. **Competitive Intelligence**\n   - Note the messages that are resonating for competitors.\n   - Identify any gaps in their positioning or communication.\n\n7. **Ad Copy Pattern Analysis**\n   - Analyze the brand’s existing best-performing ads:\n     - What hook types work best (e.g., emotional, benefit-driven, curiosity)?\n     - What angles, formats, or narratives keep recurring?\n     - Identify recurring phrases or structures across top ads.\n\n8. **Messaging Opportunities**\n   - Based on the above, suggest untapped or underleveraged messages, themes, or angles to test next.\n   - Highlight gaps or inconsistencies in current messaging that could be optimized.\n\n**Note:** You do not have direct access to the document ID. The Group Leader Agent will send you the document ID in an initial message. Use the provided document ID (referenced as {Leader_DocumentID}) with the Get_Data tool if necessary to retrieve any aggregated input data from Google Docs that could inform your research.\n\nUse detailed, specific, and actionable language in your research output. Ensure that each insight is supported by citations (include source names or article titles). Be precise and concise in your responses.\n\nGenerate the comprehensive research findings accordingly.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        10340,
        -1880
      ],
      "id": "67c0d842-6ac0-466f-9674-1dbfc259b84f",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        10300,
        -1680
      ],
      "id": "12b528af-2cda-4e64-b673-6ecd70f9bbb7",
      "name": "OpenAI Chat Model4"
    },
    {
      "parameters": {
        "name": "Perplexity_Tool",
        "description": "Call this tool to perform a real-time web search using the Perplexity API. The input should be a string containing the question or keywords you want to search for.",
        "workflowId": {
          "__rl": true,
          "value": "mCFULQgrsZMQfA9Y",
          "mode": "list",
          "cachedResultName": "Facebook Ads Analyzer & Creator"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        10580,
        -1680
      ],
      "id": "3488959b-b05e-4e31-8c4d-449b3efc87fa",
      "name": "Perplexity Tool1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "490356ac-060f-44da-b18c-af00cdb6ab6d",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        11160,
        -1700
      ],
      "id": "c070be40-f4a9-4e46-88ff-3374ed2ebdfe",
      "name": "Webhook2",
      "webhookId": "490356ac-060f-44da-b18c-af00cdb6ab6d"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        11760,
        -1700
      ],
      "id": "aaf7e60c-abff-4b4b-9fd7-6d39c38a4322",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Leader Agent Message:\n{{ JSON.stringify($json.body) }}",
        "options": {
          "systemMessage": "You are the New Ad Creator Agent. Your task is to generate new creative ad suggestions using the performance summary from the Performance Analyzer and the behavioral insights from the Deep Research Agent as inputs. Your responsibilities include:\n\n1. Produce three complete new ad copy drafts. Each draft must include:\n   - A compelling headline (new hook) that resonates with the target audience.\n   - Body copy that leverages insights from the performance data and deep research, incorporating emotional angles or \"aha moments.\"\n\n2. Generate two additional hook/headline variations specifically suited for video ads or UGC content.\n\n3. Create one creative direction note that includes:\n   - Recommendations on tone, mood, and style (e.g., which format to use: UGC testimonial, founder voiceover, etc.).\n   - Suggestions for visuals (e.g., lighting, framing, imagery) that align with the target audience.\n   - A proposed hook line.\n\n**Important:** You do not have direct access to the document ID. The Group Leader Agent will provide you with the document ID (referenced as {Leader_DocumentID}) if necessary to retrieve any aggregated input data from Google Docs using the Get_Data tool. Ensure that your creative proposals are based solely on the consolidated performance and research insights provided.\n\nYour output should be structured and formatted clearly so that the Group Leader Agent can integrate it into the final Markdown report without any extraneous content.\n\nGenerate the new ad creative proposals accordingly.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        11380,
        -1700
      ],
      "id": "a673de6e-20eb-4f1c-bf6b-31f7c08f4a32",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        11340,
        -1500
      ],
      "id": "a0b281c9-66e7-4832-9699-99acf81f751e",
      "name": "OpenAI Chat Model5"
    },
    {
      "parameters": {
        "content": "# Multi Agent System",
        "height": 1780,
        "width": 3340,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8780,
        -2860
      ],
      "id": "62bda9e4-f19b-4190-97e7-6b253ca60b6b",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "content": "## Leader Agent",
        "height": 740,
        "width": 1220,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        9800,
        -2800
      ],
      "id": "17a28c1c-4051-4f2e-9a81-b4ce09418be5",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to send all campaign performance data—including campaign details, ad information, performance metrics, and additional context—to the Performance Analyzer Agent. It extracts and consolidates key metrics (such as ROAS, CTR, Spend) and returns a structured summary of the campaign’s performance.",
        "method": "POST",
        "url": "https://rsmedia.app.n8n.cloud/webhook/Performance Analyzer Agent",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "Message To Performance Analyzer"
            },
            {
              "name": "Document ID",
              "valueProvider": "fieldValue",
              "value": "={{ $('Update Temp file').item.json.documentId }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        10220,
        -2340
      ],
      "id": "c4186970-5bf5-4b95-a591-e0aa008c659f",
      "name": "Performance Analyzer2"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to forward detailed queries to the Deep Research Agent. It leverages the Perplexity_Tool to gather in-depth insights from public sources (e.g., Reddit threads, Amazon reviews, TikTok comments, DTC marketing studies). The tool retrieves precise information on consumer behavior, emotional triggers, and market trends, along with proper source citations.",
        "method": "POST",
        "url": "https://rsmedia.app.n8n.cloud/webhook/Deep Research",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "Message To Deep Research Agent"
            },
            {
              "name": "Document ID",
              "valueProvider": "fieldValue",
              "value": "={{ $('Update Temp file').item.json.documentId }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        10420,
        -2340
      ],
      "id": "8b3cb2f6-f10a-463c-aa12-c58a3a56e590",
      "name": "Deep Research"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to send the consolidated performance data and research insights to the New Ad Creator Agent. This agent uses the input to generate creative ad suggestions—including three complete new ad copy drafts, additional hook/headline variations for video ads or UGC, and a creative direction note with recommendations on tone, format, mood, and visuals.",
        "method": "POST",
        "url": "https://rsmedia.app.n8n.cloud/webhook/New Ad Creator Agent",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "Message To the New Ad Creator"
            },
            {
              "name": "Document ID",
              "valueProvider": "fieldValue",
              "value": "={{ $('Update Temp file').item.json.documentId }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        10580,
        -2340
      ],
      "id": "acc3cd3b-4cea-444d-9385-f87f46501db4",
      "name": "New Ad Creator Agent"
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $('Get Insights').item.json.data[0].ad_id }}",
        "edge": "insights",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "date_preset",
                "value": "={{ $('Set Fields').item.json.date_preset }}"
              },
              {
                "name": "fields",
                "value": "ad_id, action_values"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        4720,
        -2460
      ],
      "id": "390d2f5f-51f2-46e2-989c-693d9ae721d2",
      "name": "Get Actions Values",
      "executeOnce": false
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $('Get Insights').item.json.data[0].ad_id }}",
        "edge": "insights",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "date_preset",
                "value": "={{ $('Set Fields').item.json.date_preset }}"
              },
              {
                "name": "fields",
                "value": "ad_id, cost_per_action_type"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        4940,
        -2460
      ],
      "id": "0b7c3f04-b5bf-41c1-96c0-6ce16a428ed4",
      "name": "Get Cost Per action",
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "=Data:\n{{ $('Aggregate Input').item.json['Aggregated Input'] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        8220,
        -2480
      ],
      "id": "a212fba0-5f26-4dda-a921-5ff877e4045d",
      "name": "Update Temp file"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "13uhKDbKTtlGOdR-e1rA-nadYkA9hafjmO9BggXfh8Xo\t"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        8120,
        -2300
      ],
      "id": "97f58bdb-38e8-452d-8e42-a31a00f2687d",
      "name": "Google Docs1"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use this tool to access to the document where the data is stored, use the given Document ID",
        "operation": "get",
        "documentURL": "={{ $fromAI('Documment_ID') }}"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        10440,
        -2040
      ],
      "id": "a58f6a28-4a37-470c-a6de-3a7912b8d45f",
      "name": "Get Data"
    },
    {
      "parameters": {
        "url": "={{ \"https://graph.facebook.com/v22.0/act_\" + $json[\"Ad Account ID\"] + \"/campaigns\" }}\n",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "facebookGraphApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "fields",
              "value": "name, objective"
            },
            {
              "name": "date_preset ",
              "value": "={{ $json.date_preset }}"
            },
            {
              "name": "effective_status",
              "value": "[\"ACTIVE\"]"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2720,
        -2460
      ],
      "id": "8f16d092-59f4-4ab3-86ce-ced4e2a1f799",
      "name": "Get Active Campaigns"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "IhEtZJgR8surR5lk",
          "mode": "list",
          "cachedResultName": "Error Message Workflow"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        13180,
        -2180
      ],
      "id": "04bca77b-bd7e-4a26-8dd4-be956a423ae8",
      "name": "Execute Error Workflow"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08MF1MRU7K",
          "mode": "list",
          "cachedResultName": "n8n"
        },
        "messageType": "block",
        "blocksUi": "={{ $('Head').item.json.output.replaceAll(\"```\", \"\").replace(\"json\", \"\") }}",
        "text": "=",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "mrkdwn": true
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        12680,
        -2560
      ],
      "id": "4932d899-3dfa-44ae-aa1c-a8eb94cafc59",
      "name": "Send Output Slack",
      "webhookId": "b9da3f17-b456-4144-a13e-c6de2117a244",
      "executeOnce": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d5ac93fe-aeb8-4b8d-b1b9-ffe8d41aa3ea",
              "name": "Today date",
              "value": "={{new Date()}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8440,
        -2480
      ],
      "id": "3946e6ca-2979-4b36-90cf-774bef6fe128",
      "name": "Set Date"
    },
    {
      "parameters": {
        "operation": "deleteFile",
        "fileId": {
          "__rl": true,
          "value": "=13SQQWDDzn-3wsMnj_j9wm_A-ErsBOBEFSrIoHe-69yQ",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        8260,
        -2680
      ],
      "id": "3a654b09-ba58-4498-aad1-42917959b0bb",
      "name": "Manual Delete"
    },
    {
      "parameters": {
        "content": "### Trigger Day 10 am",
        "height": 260,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1700,
        -2260
      ],
      "id": "b4c5d1f4-4bc7-4e5d-9909-8e20decce619",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 0 10 * * 1"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1780,
        -2460
      ],
      "id": "bffe4857-783d-4b23-804b-502ae84630ad",
      "name": "Weekly Trigger"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 0 10 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        1780,
        -2160
      ],
      "id": "35e32089-39dd-4259-b906-fd23ad080250",
      "name": "Daily Trigger",
      "disabled": true
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "company_knowledge_database",
        "toolDescription": "use this tool to get",
        "pineconeIndex": {
          "__rl": true,
          "value": "facebook-ads-analyzer-creator",
          "mode": "list",
          "cachedResultName": "facebook-ads-analyzer-creator"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        10720,
        -2340
      ],
      "id": "77167027-6cb1-4051-a216-9ef585c03b2d",
      "name": "Pinecone Vector Store"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        10860,
        -2240
      ],
      "id": "917d156f-2b61-48d6-90fc-2049a5ddd5c7",
      "name": "Embeddings OpenAI"
    },
    {
      "parameters": {
        "content": "## Triggers",
        "height": 840,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        -2800
      ],
      "id": "74875c87-316a-42e6-a92f-408aca4e6a46",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "## Set Data",
        "height": 840,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2080,
        -2800
      ],
      "id": "d6554d1d-6829-4702-9ca6-51c286f206a1",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "content": "## Get Data From facebook",
        "height": 440,
        "width": 3400
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2580,
        -2660
      ],
      "id": "817dc597-77c8-4488-8738-731571c88d00",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $json.id }}",
        "edge": "insights",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "date_preset",
                "value": "={{ $('Set Fields').item.json.date_preset }}"
              },
              {
                "name": "fields",
                "value": "ad_name,ad_id,campaign_name,campaign_id,spend,conversions,cost_per_conversion,cpm,cpc,ctr"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        4040,
        -2460
      ],
      "id": "99dd1943-e2fa-458d-8f2f-742a34540a40",
      "name": "Get Insights",
      "executeOnce": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2920,
        -2460
      ],
      "id": "9ee3bc22-2f66-48df-8e2d-3cebe2c69b77",
      "name": "Split Out Campaigns"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3480,
        -2460
      ],
      "id": "f0cb0e9f-03f0-4d7f-b96c-7345e1104abb",
      "name": "Split Out Ads"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b5615afa-a436-4692-804e-9dff5c9a9ce0",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        4280,
        -2460
      ],
      "id": "f318db08-3f3d-4334-aa13-8e46e6a423e8",
      "name": "Filter Empty Items"
    },
    {
      "parameters": {
        "graphApiVersion": "v21.0",
        "node": "={{ $('Filter Empty Items').item.json.data[0].ad_id }}",
        "edge": "insights",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "date_preset",
                "value": "={{ $('Set Fields').item.json.date_preset }}"
              },
              {
                "name": "fields",
                "value": "purchase_roas"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        5160,
        -2460
      ],
      "id": "de7142ee-9901-4651-8652-d52d4cb65773",
      "name": "Get ROAS",
      "executeOnce": false
    },
    {
      "parameters": {
        "content": "## Prepare Data",
        "height": 680,
        "width": 2560
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6040,
        -2760
      ],
      "id": "cc316a3b-eff4-4cba-8f87-9030e06539b9",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "content": "### Collect Data",
        "height": 260,
        "width": 280,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6400,
        -2400
      ],
      "id": "3bafa380-2a20-49c4-8cdd-bb23296951cb",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "### Save Data Temporarily",
        "height": 240,
        "width": 400,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7960,
        -2540
      ],
      "id": "b6eb68ab-f5ac-4e9a-8b80-afca0d4623a6",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "folderId": "default",
        "title": "=Temp Document"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        8000,
        -2480
      ],
      "id": "2aa4022b-803d-49c5-a2fb-c8ed18196a3e",
      "name": "Create Temp File"
    },
    {
      "parameters": {
        "operation": "deleteFile",
        "fileId": {
          "__rl": true,
          "value": "=13uhKDbKTtlGOdR-e1rA-nadYkA9hafjmO9BggXfh8Xo",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        12300,
        -2560
      ],
      "id": "8a91b18f-f4f1-427c-b26d-447478a8f21a",
      "name": "Delete Temp File"
    },
    {
      "parameters": {
        "content": "## Final steps",
        "height": 780,
        "width": 1200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        12200,
        -2760
      ],
      "id": "982f3848-fab6-4507-822d-bbeebd9db51e",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "23b4ef36-b934-464f-af2f-c3a69444b306",
              "leftValue": "={{ $runIndex }}",
              "rightValue": 4,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        12960,
        -2200
      ],
      "id": "06cdb4e5-57b9-4f43-9b0d-f2e66a679e9e",
      "name": "Count Executions"
    }
  ],
  "pinData": {
    "Weekly Trigger": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-06-25T22:58:44.000Z",
  "versionId": "387e8921-eceb-45b0-acea-bb6d3f00ab11"
}